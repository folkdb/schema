type TextItem @embedded {
  title: String!
  description: String!
  content: String!
  citation: String
}


enum MediaFormat {
  IMAGE
  AUDIO
  VIDEO
}


type MediaItem @embedded {
  format: MediaFormat!
  title: String!
  description: String!
  url: String!
  citation: String
}


type Place {
  country: String!
  region: String
  locale: String
}


type Birth {
  date: Date
  place: Place
}


type Death {
  date: Date
  place: Place
}


enum Gender {
  MALE
  FEMALE
  NONBINARY
}


type Person {
  lastName: String
  firstName: String
  otherNames: [String!]
  notes: String 
  birth: Birth
  death: Death
  gender: Gender
  memberOf: [Artist!] @relation
  songCredits: [SongCredit!] @relation
  sessionCredits: [SessionCredit!] @relation
  performerCredits: [PerformerCredit!] @relation
}


type Artist {
  name: String!
  members: [Person!] @relation
  recordings: [Recording!] @relation
  releases: [Release!] @relation
  tracks: [Track!] @relation
}


enum SongRole {
  WRITER
  COMPOSER
  LYRICIST
  ARRANGER
  TRANSCRIBER
  COLLECTOR
  PUBLISHER
}


type SongCredit {
  name: Person!
  role: SongRole!
  songs: [Song!] @relation
}


type Song {
  roudNum: String
  childNum: String
  otherNums: [String!]
  canonicalName: String
  versionName: String
  tuneName: String
  otherNames: [String!]
  citation: String
  notes: String
  textItems: [TextItem!]
  mediaItems: [MediaItem!]
  credits: [SongCredit!] @relation
}


enum SessionType {
  COMMERCIAL
  DOCUMENTARY
  AMATEUR
}


enum SessionRole {
  PRODUCER
  SUPERVISOR
  TECHNICAL
  COLLECTOR
  ASSISTANT
  SELF_RECORDING
}


type SessionCredit {
  name: Person!
  role: SessionRole!
  sessions: [Session!] @relation
}


type Session {
  date: Date
  place: Place
  type: SessionType
  credits: [SessionCredit!] @relation
  organization: String
  notes: String
}


enum PerformerRole {
  VOCALIST
  INSTRUMENTALIST
  SPEAKER
}


type PerformerCredit {
  name: Person!
  role: PerformerRole
  details: String
  recordings: [Recording!] @relation
}


type Recording {
  session: Session
  song: Song
  artists: [Artist!] @relation
  credits: [PerformerCredit!] @relation
  primaryTitle: String
  alternateTitles: [String!]
  identifier: String
  takeNumber: Int
  isMaster: Boolean
  notes: String
  textItems: [TextItem!]
  mediaItems: [MediaItem!]
}


type Release {
  date: Date
  country: Place
  artists: [Artist!] @relation
  primaryTitle: String
  alternateTitles: [String!]
  label: String
  catalogNum: String
  format: String
  isCompilation: Boolean
  isReissue: Boolean
  notes: String
  discogsUrl: String
  spotifyUrl: String
  tidalUrl: String
  textItems: [TextItem!]
  mediaItems: [MediaItem!]
}


type Track {
  recording: Recording
  release: Release
  artists: [Artist!] @relation
  title: String
  position: String
  notes: String
  textItems: [TextItem!]
  mediaItems: [MediaItem!]
}


type Query {
  allSongs: [Song!]
  allArtists: [Artist!]
  allRecordings: [Recording!]
  allReleases: [Release!]
  allTracks: [Track!]
}
